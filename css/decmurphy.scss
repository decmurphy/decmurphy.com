$hue: 355;
$first-color: hsl($hue, 100%, 50%);
$second-color: complement($first-color);

@function isCoolColor($color) {
    @return hue($color) < 300 and hue($color) > 120;
}

@function isHighKeyValue($color) {
    @return hue($color) > 30 and hue($color) < 140;
}

@function harmoniousMix($mix, $base) {
    @if (isCoolColor($mix)){
        @if isHighKeyValue($base) {
            @return mix($mix, $base, 11%);
        }
        @else {
            @return mix($mix, $base, 16%);
        }
    }
    @else {
        @if isHighKeyValue($base) {
            @return mix($mix, $base, 13%);
        }
        @else {
            @return mix($mix, $base, 23%);
        }
    }
}

@function mixNeutral($color) {
	@if (is-highest-key-value($color)) {
		@if is-high-key-value(complement($color)) {
			@return mix(complement($color), $color, 19%);
		}
		@else {
			@return mix(complement($color), $color, 13%);
		}
	}
	@else if (is-high-key-value($color)) {
		@if is-high-key-value(complement($color)) {
			@return mix(complement($color), $color, 31%);
		}
		@else {
			@return mix(complement($color), $color, 23%);
		}
	}
	@else {
		@if is-highest-key-value(complement($color)) {
			@return mix(complement($color), $color, 31%);
		}
		@if is-high-key-value(complement($color)) {
			@return mix(complement($color), $color, 26%);
		}
		@else {
			@return mix(complement($color), $color, 23%);
		}
	}
}

$mixed1: harmoniousMix($first-color, $second-color);
$mixed2: harmoniousMix($second-color, $first-color);

$neutral1: mixNeutral($first-color);
$neutral1Light: lighten($neutral1, 20%);
$neutral1Dark: darken($neutral1, 10%);

$neutral2: mixNeutral($second-color);
$neutral2Light: lighten($neutral2, 20%);
$neutral2Dark: darken($neutral2, 10%);

$white: darken(rgb(255,255,255), 10%);
$black: lighten(rgb(0,0,0), 10%);

@font-face {
    font-family: 'Brandon Grotesque';
    font-style: normal;
    src: url(../fonts/Brandon\ Grotesque\ Medium.otf) format('opentype');
}
* {
    flex: 1;
}
html {
    font-family: 'Brandon Grotesque', sans-serif !important;
}
body {
    margin: 0px;
    width: 100% !important;
    background-color: $neutral1Dark;
}
.header1 {
    width: 100%;
    background-color: $neutral1Light;
}
.header2 {
    width: 50%;
}
::-webkit-scrollbar {
    display: none;
}
.container {
    display: flex;
    align-items: center;
    justify-content: space-around;
}

.row {
    flex-flow: row nowrap;
}
.column {
    flex-flow: column nowrap;
}

.section {
    height: -webkit-calc(100vh - 5vw);
    height:    -moz-calc(100vh - 5vw);
    height:         calc(100vh - 5vw);
    width: 95vw;
    margin:2.5vw;
}
.section {
    color:$black;
    background-color:$white;
    
    a:link, a:hover {color:$neutral1Dark;}
    a:visited {color:$neutral2Dark;}
    a:focus, a:active {color:$neutral2Light;}
}

.icon {
    color: $neutral2;
}

.center {
    text-align:center;
}

#lander {
    color: $black;
    font-size: 1.5em;
    flex-direction: row;
}

.profiler {
    content:url("../images/profile3.jpg");
    border-radius: 50%;
    max-width: 100%;
}

@media only screen and (max-device-width: 480px) {
    #lander {
        flex-direction: column;
        font-size: 1em;
        text-align: center;
    }
    .profiler {
        max-width: 67%;
    }
}



.flex1 {flex: 1;}
.flex2 {flex: 2;}
.flex3 {flex: 3;}
.flex4 {flex: 4;}
.flex5 {flex: 5;}
.flex6 {flex: 6;}
.flex7 {flex: 7;}
.flex8 {flex: 8;}
.flex9 {flex: 9;}
.flex10 {flex: 10;}
.flex11 {flex: 11;}
.flex12 {flex: 12;}
